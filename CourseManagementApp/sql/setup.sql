--calling table drops
@remove.sql

--adding objects
@project_type.sql

--Creating tables
--User
create table course_users (
    user_id integer generated by default on null as identity primary key,
    name varchar2(100) not null,
    password varchar2(102) not null,
    email varchar2(100) not null unique,
    access_group number(1,0) not null,
    date_created date not null,
    blocked char(1) not null
);
--Term
create table terms (term_id number PRIMARY KEY, 
                    term_name char(6) NOT NULL);

--Domain
create table domains (domain_id number generated always as identity PRIMARY KEY, 
                        domain varchar2(50) NOT NULL, 
                        domain_description varchar2(1000) NOT NULL);

--Course
create table courses (course_id varchar2(10) PRIMARY KEY, 
                    course_title varchar2(50) NOT NULL,
                    theory_hours number NOT NULL, 
                    lab_hours number NOT NULL, 
                    work_hours number NOT NULL,
                    description varchar2(1000) NOT NULL, 
                    domain_id REFERENCES domains(domain_id), 
                    term_id REFERENCES terms(term_id));

--Competency
create table competencies (competency_id char(4) PRIMARY KEY, 
                            competency varchar2(250) NOT NULL,
                            competency_achievement varchar2(1000) NOT NULL ,
                            competency_type varchar2(10) NOT NULL);
                        
--Element
create table elements (element_id number generated always as identity PRIMARY KEY, 
                        element_order number NOT NULL, 
                        element varchar2(250) NOT NULL,
                        element_criteria varchar2(1000) NOT NULL, 
                        competency_id REFERENCES competencies(competency_id));
                    
--Courses_Elements (Bridging)
create table courses_elements (course_id REFERENCES courses(course_id) ON DELETE CASCADE, 
                                element_id REFERENCES elements(element_id) ON DELETE CASCADE, 
                                element_hours number NOT NULL,
                                CONSTRAINT course_element PRIMARY KEY(course_id, element_id));

--calling creation of sample data
@inserting.sql

--adding triggers for logging
@logging.sql

--adding views
@views.sql

--adding package
@courses_package.sql